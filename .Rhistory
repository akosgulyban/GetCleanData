cachemean(a)
x1 <-matrix(rnorm(16),nrow=4)
a
source("matrix.R")
mx1<- makeCacheMatrix(x1)
mx1$get()
cacheSolve(mx1)
cacheSolve(mx1)
source("matrix.R")
mx1<- makeCacheMatrix(x1)
source("matrix.R")
mx1<- makeCacheMatrix(x1)
source("matrix.R")
source("makeVector.R")
a <-makeVector(c(1,2,3,4))
a$get()
a
a$getmean()
source("matrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4),nrow=2))
amatrix$get()
source("matrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4),nrow=2))
amatrix$get()
cacheSolve(amatrix)
source("matrix.R")
cacheSolve(amatrix)
cacheSolve(amatrix)
set.seed(1)
rpois(5,2)
rpois(5,2)
set.seed(2)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rnorm
?qpois
?ppois
set.seed(10)
x<-rbinom(10,10,0.5)
e<-rnorm(10,0,20)
y<-0.5+2*x+e
x
x
y
stat(y)
summary(y)
outcome <-read.csv("week3\outcome-of-care-measures.csv",colClasses = "character")
outcome <-read.csv("week3/outcome-of-care-measures.csv",colClasses = "character")
head(outcome)
outcome[,11]<-as.numberic(outcome[,11])
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
str(outcome)
outcome$state
View(outcome)
View(outcome)
outcome$State
exists("TX", where = outcome$State)
exists("TX",outcome$State)
exists("TX",envir = outcome$State)
exists("TX",where = "outcome$State")
states <- outcome$State
states
states <- unique(outcome$State)
states
is.null(state[["TX"]])
is.null(states[["TX"]])
is.null(states["TX"])
exists(states$TX)
"TX" %in% states
state = TY
state <- "TY"
state
if (state %in% states) = F {
if (state !%in% states)
if !(state %in% states)
if (state %in% states)
TRUE
}
state %in% states
!(state %in% states)
hospitaldata <- read.csv("week3\hospital-data.csv")
hospitaldata <- read.csv("week3/hospital-data.csv")
View(hospitaldata)
View(hospitaldata)
head(outcome)
pneu <- outcome$Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia
pneu
min(pneu)
?tapply
tapply(outcome$Hospital.Name,outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,min)
tapply(outcome$State,outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,min)
tapply(outcome$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack,outcome$State,min)
outcome$2
tops <- names(outcome)
tops
lit<-outcome[,11]
lit
statedata<-subset(outcome, State == "TX")
statedata
View(statedata)
View(statedata)
statedata <- data[data$State = "TX"]
statedata <- data[data$State == "TX"]
state <- "TX"
statedata <- outcome[outcome$State == "TX"]
statedata <- outcome[outcome$State == "TX",]
View(statedata)
View(statedata)
?stop
reorder <-statedata[order(statedata[,11],statedata[,2])]
reorder <-statedata[ order(statedata[,11],statedata[,2])]
statedata[ order(statedata[,11],statedata[,2])]
statedata[ order(statedata[,12],statedata[,3])]
statedata[ order(statedata[,12],statedata[,3]),]
list1 <- statedata[ order(statedata[,12],statedata[,3]),]
list[1,2]
list1[1,2]
source("best.R")
source("best.R")
source("best.R")
source("best.R")
source("best.R")
best("TX","heart attack")
names(outcome)
source("best.R")
source("best.R")
source("best.R")
best("TX","heart attack")
testdata <-outcome[outcome$State =="TX",]
testdata[order(-testdata[,11],outcome[,2]),]
testdata[order(-testdata[,12],outcome[,3]),]
View(testdata)
View(testdata)
testdata[order(-testdata[,12],outcome[,3]),]
names(testdata)
testdata[order(testdata[,11],outcome[,2]),]
testdata[order(testdata[,11]),]
listing1<-testdata[order(testdata[,11]),]
listing1[1,2]
View(listing1)
View(listing1)
source("best.R")
best("TX","heart attack")
source("best.R")
best("TX","heart attack")
best("MD","heart attack")
best("TX","heart failure")
source("best.R")
best("TX","heart failure")
listing1<-testdata[order(testdata[,17]),]
View(listing1)
View(listing1)
best("MD","pneumonia")
best("BB","pneumonia")
best("MD","epneumonia")
source("best.R")
best("TX","heart failure")
best("MD","heart attack")
best("TX","heart attack")
source("submitscript3.R")
submit()
submit()
best("TX","heart failure")
listing1<-testdata[order(testdata[,17],testdata[,2]),]
View(listing1)
View(listing1)
listing1<-testdata[order(testdata[,2],testdata[,17]),]
View(listing1)
View(listing1)
listing1<-testdata[order(testdata[,17],testdata[,17]),]
View(listing1)
View(listing1)
source("best.R")
best("TX","heart failure")
submit()
submit()
source("rankhospital.R")
rankhospital("TX","heart failure")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("MD","heart failure","worst")
source("rankhospital.R")
rankhospital("MD","heart failure","worst")
rankhospital("MD","heart arrack","worst")
rankhospital("MD","heart attack","worst")
rankhospital("MN","heart attack","5000")
rankhospital("MN","heart attack",2)
rankhospital("MN","heart attack","best")
rankhospital("MN","heart attack",1)
numb1 <- nrow(listing1)
numb1
source("rankhospital.R")
rankhospital("MD","heart failure","worst")
rankhospital("MD","heart attack","worst")
rankhospital("MD","heart failure",4)
source("rankhospital.R")
rankhospital("MD","heart failure",4)
rankhospital("TX","heart failure",4)
rankhospital("MD","heart failure",4)
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
rankhospital("TX","heart attack","worst")
rankhospital("MD","heart attack","worst")
rankhospital("MN","heart attack",5000)
submit()
submit()
submit()
submit()
View(outcome)
View(outcome)
tmp1<-cbind(outcome[,2],ourcome[,7],outcome[,17])
tmp1<-cbind(outcome[,2],outcome[,7],outcome[,17])
View(tmp1)
View(tmp1)
names(tmp1)<-c("Hospital.Name","State","rate")
View(tmp1)
df1<-data.frame(tmp1)
names(df1)<-c("Hospital.Name","State","rate")
View(df1)
View(df1)
df2<-na.omit(df1)
View(df2)
View(df2)
na.omit(df2)
df2[,3]<-as.numeric(df2[,3])
header(df2)
names(df2)
setkey(df2,"Hospital.Name","State", "rate")
?data.table
stating <- split(outcome,outcome$State)
?rbind
result1<-data.frame()
result1<-rbind(result1,("TX","s","SA")
result1<-rbind(result1,("TX","s","SA"))
result1<-rbind(result1,c("TX","s","SA"))
result1
source("rankall.R")
source("rankall.R")
head(rankall("heart attack",20),10)
?lapply
tmp2<-outcome[,c("Hospital.Name","State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure")]
View(tmp2)
View(tmp2)
tmp2split<-split(tmp2,tmp2$State)
tmp3 <- outcome[,c(2,7,15)]
View(tmp3)
View(tmp3)
tmp3 <- outcome[,c(2,7,17)]
View(tmp3)
View(tmp3)
source("rankall.R")
source("rankall.R")
head(rankall("heart attack",20),10)
source("rankall.R")
head(rankall("heart attack",20),10)
source("rankall.R")
head(rankall("heart attack",20),10)
?order
tmp2split[order(tmp2split, c("State","Hospital.Name")]
tmp2split[order(tmp2split, c("State","Hospital.Name"))]
tmp2split[order(tmp2split, c("State","Hospital.Name"),)]
names(tmp2split)
str(tmp2split)
tmp3<-data.frame(tmp2split)
source("rankall.R")
head(rankall("heart attack",20),10)
source("rankall.R")
head(rankall("heart attack",20),10)
source("rankall.R")
head(rankall("heart attack",20),10)
source("rankall.R")
head(rankall("heart attack",20),10)
submit()
source("rankall.R")
head(rankall("heart attack",20),10)
submit()
submit()
submit()
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileURL,destfile="quiz1.csv", method="curl")
download.file(fileURL,destfile="/quiz1.csv", method="curl")
download.file(fileURL,destfile="quiz1.csv")
quiz1data<-read.csv("quiz1.csv")
View(quiz1data)
View(quiz1data)
as.data.frame(quiz1data[VAL](numbers))
as.data.frame(quiz1data$VAL(numbers))
q1<-quiz1data$VAL
a<-q1[q1==6, na.rm=TRUE]
a <- data.frame(quiz1data$VAL==6)
a
a1<-a(a==T)
a1<-a[a==T]
a1
a2<-table(a)
a2[a[a2]==TRUE]
a2
q1[quiz1$VAL==24]
q1[quiz1data$VAL==24]
a3<-[quiz1data$VAL==24]
a3<-quiz1data[quiz1data$VAL==24]
df1<-data.frame(quiz1data)
bar <-as.data.frame(table(df1$VAL), stringAsFactors = F)
bar
fileURL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL2,destfile="quiz1_3.xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
data1 <-read.xlsx("quiz1_3.xlsx",rowIndex=18:23,colIndex=7:15)
fileURL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL2,destfile="quiz1_3.xlsx",method="curl")
data1 <-read.xlsx("quiz1_3.xlsx",sheetIndex=1,header=TRUE)
fileURL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileURL2,destfile="quiz1_3.xlsx")
download.file(fileURL2,destfile="quiz13.xlsx")
?download.file
download.file(fileURL2,destfile="quiz13.xlsx",method="curl")
fileURL
fileURL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileURL2,destfile="quiz13.xlsx",method="curl")
download.file(fileURL2,destfile="quiz13.xlsx")
install.packages(c("jsonlite", "knitr", "RadOnc", "RCurl", "reshape2", "rgl"))
download.file(fileURL2,destfile="quiz13.xlsx")
download.file(fileURL2,destfile="quiz13.xlsx",method="curl")
fileURL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx "
download.file(fileURL2,destfile="quiz13.xlsx")
data1 <-read.xlsx("quiz13.xlsx",rowIndex=18:23,colIndex=7:15)
library(xlsx)
data1 <-read.xlsx("quiz13.xlsx",rowIndex=18:23,colIndex=7:15)
data1 <-read.xlsx("quiz13.xlsx",sheetIndex=1,rowIndex=18:23,colIndex=7:15)
dat <-data1
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
install.packages(XML)
install.packages("XML")
library(XML)
fileUrl3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml "
doc <- xmlTreeParse(fileUrl3,useInternal=TRUE)
fileUrl3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl3,useInternal=TRUE)
doc <- xmlTreeParse(fileUrl3,useInternal=TRUE,mode="wb")
fileUrl3 <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl3,useInternal=TRUE)
rootNode <-xmlRoot(doc)
names(rootNode)
xmlName(rootNode)
doc
rootNode[[1]]
rootNode[[1][1]]
rootNode[[1]][[1]]
xml_data<-xmlToList(doc)
head(xml_data)
xmlSApply(rootNode,xmlValue)
doc[[1]]
rootNode
doc <- xmlTreeParse(fileUrl3,useInternal=TRUE)
names(rootNode)
rootNode <-xmlRoot(doc)
names(rootNode)
names(rootNode["row"])
names(rootNode[row])
names(rootNode["row"])
names(rootNode[1])
names(rootNode[1][2])
names(rootNode[1][1])
doc <- xmlTreeParse(fileUrl3,useInternalNodes=TRUE)
rootNode <-xmlRoot(doc)
names(rootNode[1][1])
names(rootNode[1])
names(rootNode)
doc[[1]]
rootNode[[1]]
rootNode[[1]]$zipcode
rootNode$zipcode
root1 <-xmlInternalTreeParse(doc)
root1 <-xmlInternalTreeParse(fileUrl3)
getNodeSet)root1,"//zipfile"
getNodeSet(root1,"//zipfile")
xpathSApply(root1,"zipfile",xmlValue)
getNodeSet(root1,"zipfile")
getNodeSet(root1,"/zipfile")
root1
getNodeSet(root1,"zipfile")
rootNode[[1]][[1]]
xmlSApply(rn,"//zipcode",xmlValue)
xmlSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
list<-xpathSApply(rootNode,"//zipcode",xmlValue)
alist<-list[list==21231]
alist
alist[names(list)=21231]
as.data.frame(table(list))
?fread
??fread
fileUrl5 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
fread()
?fread
install.packages("jsonlite")
fread(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv )
dowload.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv, "q5.csv")
dowload.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv, "q5.csv")
dowload.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "q5.csv")
dowload.file(fileUrl5,destfile="q5.csv")
dowload.file(fileUrl5,destfile="q5.csv",method="curl")
download.file(fileUrl5,destfile="q5.csv",method="curl")
download.file(fileUrl5,destfile="q5.csv")
fread("q5.csv")
install.packages("data.table")
library(data.table)
fread("q5.csv")
DT<-fread("q5.csv")
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
tapply(DT$pwgtp15,DT$SEX,mean)
?proc.time
proc.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time({tapply(DT$pwgtp15,DT$SEX,mean)})
system.time(rep(tapply(DT$pwgtp15,DT$SEX,mean)),100)
system.time(rep(tapply(DT$pwgtp15,DT$SEX,mean)),100)
source("times.R")
source("times.R")
source("times.R")
time1
time2
time3
time4
source("times.R")
time4
time3
time1
time2
time3
source("times.R")
source("times.R")
source("times.R")
time1
time2
time3
time4
system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),10000))
system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),100000))
system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),1000000))
DR
DT
proc.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),1000000))
?proc.time
?system.time
library(stats)
?system.time
system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),1000000))
system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),10000000))
system.time(rep(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15),10000000))
system.time(rep((mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)),10000000))
system.time(rep(mean(DT[DT$SEX==1,]$pwgtp15),10000000))
system.time(rep(DT[,mean(pwgtp15),by=SEX],10000000))
system.time(rep(tapply(DT$pwgtp15,DT$SEX,mean),10000000))
bet <- system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),1000000)) - system.time(rep(mean(DT[DT$SEX==1,]$pwgtp15),10000000))
bet
bet <- system.time(rep(mean(DT[DT$SEX==1,]$pwgtp15),10000000))
bet
bet <- system.time(rep(mean(DT[DT$SEX==1,]$pwgtp15),10000000)) - system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),10000))
bet
bet <- system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),10000))- system.time(rep(sapply(split(DT$pwgtp15,DT$SEX),mean),10000000))
bet
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
source("times.R")
time1-time2
time2-time3
time2-time4
installpackage("sqldf")
installpackages("sqldf")
install.packages("sqldf")
acs
library(sqldf)
acs
url1<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
acs <- dowload.file(url1,destfile="acs.csv")
dowload.file(url1,destfile="acs.csv")
download.file(url1,destfile="acs.csv")
acs <-read.csv("acs.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select pwgtp1 from acs")
nchar()
?nchar
q3url<- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(q3url,destfile = "microdata.csv")
micro <- read.table("microdata.csv")
?sqldf
install.packages("sqldf")
library(sqldf)
View(micro)
View(micro)
setwd("~/GoogleDrive/R/getdata")
run_analysis.R
source("run_analysis.R")
source("run_analysis.R")
setwd("~/GitHub/GetCleanData")
source("run_analysis.R")
